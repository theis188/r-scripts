d <- next_rows
} else {
d <- rbind(d,next_rows)
}
}
get_kappa_from_dataframes
source("D:/R/RScripts/Hamhoon/SQL_Depress_FACT.r")
f1 <- d
source("D:/R/RScripts/Hamhoon/SQL_Depress_FACT.r")
f1 <- d
source("D:/R/RScripts/Hamhoon/SQL_Depress_FACT.r")
f1 <- d
source("D:/R/RScripts/Hamhoon/SQL_Depress_PCL_SQL_PSYCH_MFACT.r")
source("D:/R/RScripts/Hamhoon/Functions.r")
root
source("D:/R/RScripts/Hamhoon/SQL_Depress_FACT.r")
source("D:/R/RScripts/Hamhoon/Good_Functions.r")
source("D:/R/RScripts/Hamhoon/SQL_Depress_FACT.r")
f1 <- d
source("D:/R/RScripts/Hamhoon/SQL_Depress_PCL_SQL_PSYCH_MFACT.r")
f2 <- VIGGA
source("D:/R/RScripts/Hamhoon/SQL_Depress.r")
f2
d
source("Good_Functions.r")
getwd()
setwd("D:/R/Rscripts/Hamroon")
setwd("D:/R/Rscripts/Hamroon/")
setwd("D:/R/Rscripts/Hamhoon/")
source("Good_Functions.r")
source("SQL_Depress_FACT.r")
f1 <- d
source("SQL_Depress_PCL_SQL_PSYCH_MFACT.r")
f2 <- VIGGA
source("SQL_Depress.r")
dbExecute(con, "Drop table other_patients")
dbExecute(con,"CREATE TABLE other_patients
(mrn text not null,
symptom text not null,
date date not null,
primary key(mrn,symptom))
")
for (symptom in c("Anxiety","Insomnia")) {
table_ =
read.xlsx("C:/Users/Matthew/Desktop/Correlative Project/PsychEDCEMR/R Data/Med prescribing.xlsx",
sheetName = symptom)
for (row in 1:nrow(table_)) {
mrn <- table_$MRN[row]
start <- as.Date(table_$Start[row])
rs <- try(dbSendStatement(con,sprintf( ("INSERT INTO other_patients values
(\"%s\",\"%s\",\"%s\");"), mrn , symptom , start ) ) )
if (class(rs) != 'try-error') {dbClearResult(rs)}
}
}
ddd <- ("SELECT o.mrn id,o.symptom,m.rx,m.start_date rx_start, o.date symptom_start from other_patients o
join meds m
on m.mrn = o.mrn
where ( (julianday(m.start_date) < julianday(o.date) + 30)
and ( (m.end_date is null) or ( julianday( m.end_date ) > julianday(o.date) - 30 ) )  )
")
ddd <- ("SELECT DISTINCT a.mrn, dep.dep, anx.anx, inso.inso, m.rx, m.start_date
from adverse_breakout a
join
(select mrn, max(result) dep from adverse_breakout where symptom=\"Depression\" group by mrn) dep
on a.mrn = dep.mrn
join
(select mrn, max(result) anx from adverse_breakout where symptom=\"Anxiety\" group by mrn) anx
on a.mrn = anx.mrn
join
(select mrn, max(result) inso from adverse_breakout where symptom=\"Sleep\" group by mrn) inso
on a.mrn = inso.mrn
join meds m
on m.mrn = a.mrn
and ( (julianday(m.start_date) < julianday('2015-10-01') + 30)
and ( (m.end_date is null) or ( julianday( m.end_date ) > julianday('2015-10-01') - 30 ) )  );
")
ddddddddd <- ("SELECT DISTINCT a.mrn, dep.dep, anx.anx, inso.inso
from adverse_breakout a
join
(select mrn, max(result) dep from adverse_breakout where symptom=\"Depression\" group by mrn) dep
on a.mrn = dep.mrn
join
(select mrn, max(result) anx from adverse_breakout where symptom=\"Anxiety\" group by mrn) anx
on a.mrn = anx.mrn
join
(select mrn, max(result) inso from adverse_breakout where symptom=\"Sleep\" group by mrn) inso
on a.mrn = inso.mrn;
")
BLUMBY <- dbGetQuery(con, ddddddddd)
table(BLUMBY$dep)
table(BLUMBY$anx)
table(BLUMBY$inso)
BLUMBY
q <- ("
SELECT mrn, tpt, max(response = \"Y\") anx from ros
where symptom=\"Anxiety\"
group by mrn;
")
q <- ("
SELECT mrn, tpt, max(response = \"Y\") anx from ros
where symptom=\"Anxiety\"
group by mrn;
")
ros_df <- dbGetQuery(con, q)
ANX_MEDZ <- ("(\"ALPRAZOLAM\",
\"CHLORDIAZEPOXIDE\",
\"CLONAZEPAM\",
\"DIAZEPAM\",
\"LORAZEPAM\",
\"BUSPIRONE\",
\"ESCITALOPRAM\",
\"FLUOXETINE\",
\"PAROXETINE\",
\"SERTRALINE\",
\"CLOMIPRAMINE\",
\"IMIPRAMINE\",
\"ISOCARBOXAZID\",
\"PHENELZINE\",
\"SELEGILINE\",
\"TRANYLCYPROMINE\",
)")
q <- ("
SELECT distinct mrn,rx from meds
where start_date > date(\"2015-11-01\")
")
qq <- sprintf(q,ANX_MEDZ)
df <- dbGetQuery(con, qq)
df
con <- dbConnect(RSQLite::SQLite(), "D:/R/sqldb.db")
q1 <- ("SELECT v.mrn, v.value, max(v.date) as date from vitals v
JOIN master_list m
ON v.vital=\"Weight\"
and m.t3 is not null
and m.mrn = v.mrn
where julianday( v.date ) <
julianday(m.t1) - 45
AND v.value is not null
GROUP BY v.mrn
")
q2 <- ("SELECT v.mrn, v.value, min (v.date) as date from vitals v
JOIN master_list m
ON v.vital=\"Weight\"
and m.t3 is not null
and m.mrn = v.mrn
where julianday( v.date ) >
julianday(m.t3) + 45
AND v.value is not null
GROUP BY v.mrn
")
q3 <- ("SELECT q1.mrn, q2.value - q1.value as weight_difference
from (%s) q1
join (%s) q2
on q1.mrn = q2.mrn;
")
q3 <- sprintf(q3,q1,q2)
a <- dbGetQuery(con,q3)
mean(a$weight_difference)
hist(a$weight_difference)
a['lost_weight'] = a$weight_difference < 0
qq1 <- ("select m.mrn, CASE
WHEN p.tpt=1 AND p.response >=1 THEN 1
WHEN p.tpt=2 AND p.response >=1 THEN 1
WHEN p.tpt=3 AND p.response >=1 THEN 1
ELSE 0 END symptom
from psych p
join master_list m
on p.psych_id = m.psych_id
where p.qa = \"FACT\"
and p.symptom = \"Wt Loss\"
group by m.mrn;
")
qq2 <- ("select m.mrn, CASE
WHEN p.tpt=1 AND p.response >=0 THEN 1
WHEN p.tpt=2 AND p.response >=0 THEN 1
WHEN p.tpt=3 AND p.response >=0 THEN 1
ELSE 0 END symptom
from psych p
join master_list m
on p.psych_id = m.psych_id
where p.qa = \"MSAS\"
and p.symptom = \"Wt Loss\"
group by m.mrn;
")
aa1 <- dbGetQuery(con,qq1)
aa2 <- dbGetQuery(con,qq2)
aa <- merge( aa1,aa2, by='mrn',suffixes=c('FACT','MSAS') )
aa$symptom = ( (aa$symptomFACT)==1  | (aa$symptomMSAS==1) )
j <- merge(aa,a)
f <- j[j$symptomFACT==FALSE,]$weight_difference
t <- j[j$symptomFACT==TRUE,]$weight_difference
fx = rnorm(length(f),0,0.03)
tx = rnorm(length(t),1,0.03)
X = c(fx,tx)
Y <- c(f,t)
boxplot(f,t, boxcol = 'white', outcol='white',
xlab="", ylab="Weight Change (lbs.)")
points(1+X,Y,bg='black',pch=21,xlim=c(-0.5,1.5))
axis(1, labels = c('Weight Loss\nReported Negative','Weight Loss\nReported Positive') , at=c(1,2),
padj = 0.5    )
t.test(f,t)
t.test(f,tt)
con <- dbConnect(RSQLite::SQLite(), "D:/R/sqldb.db")
xlims <- list()
xlims[['Albumin']] <- c(3.0,4.5)
xlims[['BMI']] <- c(15,45)
xlims[['Hemoglobin']] <- c(8,16)
q <- list()
q[["ros"]] <- ("SELECT mrn, avg(cnt) symptom_count
from ( select mrn,tpt,sum(response=\"Y\") as cnt from ros group by mrn,tpt ) as inner
group by mrn;
")
q[["psychFACT"]] <- ("SELECT m.mrn, avg( CASE
WHEN p.symptom in (\"Sleep\",\"Appetite\") THEN
CASE WHEN ifnull(p.response,5) <= 3 THEN 1
ELSE 0 END
WHEN ifnull(p.response,-1) >= 1 THEN 1
ELSE 0
END)*8 symptom_count
from psych p
join master_list m
ON p.qa = \"FACT\"
AND p.psych_id = m.psych_id
group by m.mrn
")
q[["psychMSAS"]] <- ("SELECT m.mrn, avg( ifnull( p.response, -1 ) >=1 )*8 symptom_count
from psych p
join master_list m
ON p.qa = \"MSAS\"
AND p.psych_id = m.psych_id
group by m.mrn
")
q[["adverse"]] <- ("SELECT mrn, avg(result)*16 symptom_count
from adverse_breakout
group by mrn")
q[["Albumin"]] <- ("SELECT l.mrn, avg(value) avg_value FROM labs l
JOIN master_list m
ON m.mrn = l.mrn
WHERE julianday(l.date) BETWEEN
julianday(m.t1) - 30 AND
CASE WHEN m.t2 IS NULL THEN julianday(m.t1) + 30
WHEN m.t3 IS NULL THEN julianday(m.t2) + 30
ELSE julianday(m.t3) + 30
END
AND lab=\"Albumin\"
GROUP BY l.mrn
")
q[["BMI"]] <- ("SELECT v.mrn, avg(value) avg_value FROM vitals v
JOIN master_list m
ON m.mrn = v.mrn
WHERE julianday(v.date) BETWEEN
julianday(m.t1) - 30 AND
CASE WHEN m.t2 IS NULL THEN julianday(m.t1) + 30
WHEN m.t3 IS NULL THEN julianday(m.t2) + 30
ELSE julianday(m.t3) + 30
END
AND vital=\"BMI\"
GROUP BY v.mrn
")
q[["Hemoglobin"]] <- ("SELECT l.mrn, avg(value) avg_value FROM labs l
JOIN master_list m
ON m.mrn = l.mrn
WHERE julianday(l.date) BETWEEN
julianday(m.t1) - 30 AND
CASE WHEN m.t2 IS NULL THEN julianday(m.t1) + 30
WHEN m.t3 IS NULL THEN julianday(m.t2) + 30
ELSE julianday(m.t3) + 30
END
AND lab=\"Hemoglobin\"
GROUP BY l.mrn
")
par(mfrow=c(1,4))
for (vital in c('Albumin')){#,'BMI','Hemoglobin')) {
for (source in c('psychMSAS','psychFACT','ros','adverse')) {
q1 <- q[[vital]]
q2 <- q[[source]]
a1 <- dbGetQuery(con, q1)
a2 <- dbGetQuery(con, q2)
j <- merge(a1, a2)
# j <- j[ !(j$mrn %in% MRN.CONTROL), ]
model <- lm(symptom_count ~ avg_value , data = j)
print(summary(model))
slope <- summary(model)$coefficients[2,1]
intercept <- summary(model)$coefficients[1,1]
l1 <- paste("slope = ", as.character( round( slope , digits = 2 ) ), sep="" )
l2 <- paste("p = ", as.character( round( summary(model)$coefficients[2,4], digits = 3 ) ), sep="" )
xlabl <- paste(l1,l2,sep='\n')
xliml <- xlims[[vital]]
x1 <- xliml[1]*0.9 + xliml[2]*0.1
x2 <- xliml[1]*0.1 + xliml[2]*0.9
y1 <- x1*slope+intercept
y2 <- x2*slope+intercept
par(mar=c(4.1,3.1,2.1,1.1) )
plot(j$avg_value,
j$symptom_count,
pch=21,
bg="black",
xlab=xlabl,
ylab='',
ylim=c(0,8),
xlim= xliml)
lines(c(x1,x2),c(y1,y2),col="black")
print(length( j$avg_value ))
}
}
root <- "C:/Users/Matthew/Desktop/Correlative Project/PsychEDCEMR/R Data/"
psych.path = paste(root,"LWLC Data File for Collaboration JCK 032017.xlsx",sep="")
library(xlsx)
psych.data <- read.xlsx(psych.path,sheetIndex = 1)
library(ggplot2)
library(RSQLite)
con <- dbConnect(RSQLite::SQLite(), "D:/R/sqldb.db")
q <- (" SELECT mrn, tpt, recorder, response
from pe where symptom=\"ECOG\"
")
ecog <- dbGetQuery(con,q)
cq <- ("SELECT DISTINCT mrn from adverse_breakout;")
clinical_mrns <- dbGetQuery(con,cq)
qq <- (
"SELECT mrn,psych_id from master_list;"
)
ml <- dbGetQuery(con,qq)
sfq1 <- 'FACT_fu_T%s_1' ## GF1
sfq2 <- 'FACT_ph_T%s_7' ## GP7
for (tpt in 1:3) {
sq1 <- sprintf(sfq1, as.character(tpt) )
sq2 <- sprintf(sfq2, as.character(tpt) )
questions <- psych.data[,c('ID',sq1,sq2)]
j <- merge(questions,
ml,
by.x = 'ID',
by.y = 'psych_id')
names(j)[names(j)==sq1] <- "GF1"
names(j)[names(j)==sq2] <- "GP7"
ecog.tpt <- ecog[ecog$tpt==tpt,]
if (tpt==1) {
final <- merge(ecog.tpt,j)
} else {
final <- rbind(final,
merge(ecog.tpt,j))
}
}
final = final[ final$GF1!='DISCONTINUED' , ]
final = droplevels(final,reorder = FALSE)
final
for (tpt in 1:3) {
tpt<-3
dfGP7 <- data.frame( table ( final[ final$tpt==tpt ,c("response", "GP7")] ) )
dfGF1 <- data.frame( table ( final[ final$tpt==tpt ,c("response", "GF1")] ) )
library(reshape)
pivGP7 <- cast(dfGP7, response ~ GP7)
pivGF1 <- cast(dfGF1, response ~ GF1)
chisq.test(pivGP7)
chisq.test(pivGF1)
write.xlsx(dfGP7, sprintf("D:R/Tables/ECOG_Output_t%s.xlsx",as.character(tpt)), sheetName="GP7BED" )
write.xlsx(dfGF1, sprintf("D:R/Tables/ECOG_Output_t%s.xlsx",as.character(tpt)), sheetName="GF1WORK", append=TRUE )
}
ggplot(dfGF1, aes(factor(response), Freq , fill = GF1 )) +
geom_bar(stat="identity", position = "dodge", width = 0.6) +
xlab("Provider-Documented ECOG Score") +
ylab("Number of Instances") +
scale_x_discrete( labels=c(
"0"="ECOG = 0",
"1"="ECOG = 1",
"2"="ECOG = 2",
"3"="ECOG = 3"
) ) +
theme(axis.text.x = element_text(face="bold", size = 12),
legend.position=c(0.5,1),
legend.justification=c(0.5,1),
axis.text.y = element_text(face="bold", size = 12),
axis.title = element_text(face="bold", size = 14) ) +
scale_fill_brewer(name=("Patient response to\n\"I am able to work\""),
labels=
c("\"Not at all\"",
"\"A little bit\"",
"\"Somewhat\"",
"\"Quite a bit\"",
"\"Very much\""),
palette="Spectral")
ggplot(dfGP7, aes(factor(response), Freq , fill = GP7 )) +
geom_bar(stat="identity", position = "dodge", width = 0.6) +
xlab("Provider-Documented ECOG Score") +
ylab("Number of Instances") +
scale_x_discrete( labels=c(
"0"="ECOG = 0",
"1"="ECOG = 1",
"2"="ECOG = 2",
"3"="ECOG = 3"
) ) +
theme(axis.text.x = element_text(face="bold", size = 12),
legend.position=c(0.5,1),
legend.justification=c(0.5,1),
axis.text.y = element_text(face="bold", size = 12),
axis.title = element_text(face="bold", size = 14) ) +
scale_fill_brewer(name=("Patient response to\n\"I am forced to spend time in bed\""),
labels=
c("\"Not at all\"",
"\"A little bit\"",
"\"Somewhat\"",
"\"Quite a bit\"",
"\"Very much\""),
palette="Spectral",
direction=-1)
ggplot(dfGF1, aes(factor(response), Freq , fill = GF1 )) +
geom_bar(stat="identity", position = "dodge", width = 0.6) +
xlab("Provider-Documented ECOG Score") +
ylab("Number of Instances") +
scale_x_discrete( labels=c(
"0"="ECOG = 0",
"1"="ECOG = 1",
"2"="ECOG = 2",
"3"="ECOG = 3"
) ) +
theme(axis.text.x = element_text(face="bold", size = 12),
legend.position=c(0.5,1),
legend.justification=c(0.5,1),
axis.text.y = element_text(face="bold", size = 12),
axis.title = element_text(face="bold", size = 14) ) +
scale_fill_brewer(name=("Patient response to\n\"I am able to work\""),
labels=
c("\"Not at all\"",
"\"A little bit\"",
"\"Somewhat\"",
"\"Quite a bit\"",
"\"Very much\""),
palette="Spectral")
final = droplevels(final,reorder = FALSE)
for (tpt in 1:3) {
# tpt<-3
dfGP7 <- data.frame( table ( final[ final$tpt==tpt ,c("response", "GP7")] ) )
dfGF1 <- data.frame( table ( final[ final$tpt==tpt ,c("response", "GF1")] ) )
library(reshape)
pivGP7 <- cast(dfGP7, response ~ GP7)
pivGF1 <- cast(dfGF1, response ~ GF1)
chisq.test(pivGP7)
chisq.test(pivGF1)
write.xlsx(dfGP7, sprintf("D:R/Tables/ECOG_Output_t%s.xlsx",as.character(tpt)), sheetName="GP7BED" )
write.xlsx(dfGF1, sprintf("D:R/Tables/ECOG_Output_t%s.xlsx",as.character(tpt)), sheetName="GF1WORK", append=TRUE )
}
ggplot(dfGF1, aes(factor(response), Freq , fill = GF1 )) +
geom_bar(stat="identity", position = "dodge", width = 0.6) +
xlab("Provider-Documented ECOG Score") +
ylab("Number of Instances") +
scale_x_discrete( labels=c(
"0"="ECOG = 0",
"1"="ECOG = 1",
"2"="ECOG = 2",
"3"="ECOG = 3"
) ) +
theme(axis.text.x = element_text(face="bold", size = 12),
legend.position=c(0.5,1),
legend.justification=c(0.5,1),
axis.text.y = element_text(face="bold", size = 12),
axis.title = element_text(face="bold", size = 14) ) +
scale_fill_brewer(name=("Patient response to\n\"I am able to work\""),
labels=
c("\"Not at all\"",
"\"A little bit\"",
"\"Somewhat\"",
"\"Quite a bit\"",
"\"Very much\""),
palette="Spectral")
dfGP7 <- data.frame( table ( final[ ,c("response", "GP7")] ) )
dfGF1 <- data.frame( table ( final[ ,c("response", "GF1")] ) )
dfGF1
ggplot(dfGF1, aes(factor(response), Freq , fill = GF1 )) +
geom_bar(stat="identity", position = "dodge", width = 0.6) +
xlab("Provider-Documented ECOG Score") +
ylab("Number of Instances") +
scale_x_discrete( labels=c(
"0"="ECOG = 0",
"1"="ECOG = 1",
"2"="ECOG = 2",
"3"="ECOG = 3"
) ) +
theme(axis.text.x = element_text(face="bold", size = 12),
legend.position=c(0.5,1),
legend.justification=c(0.5,1),
axis.text.y = element_text(face="bold", size = 12),
axis.title = element_text(face="bold", size = 14) ) +
scale_fill_brewer(name=("Patient response to\n\"I am able to work\""),
labels=
c("\"Not at all\"",
"\"A little bit\"",
"\"Somewhat\"",
"\"Quite a bit\"",
"\"Very much\""),
palette="Spectral")
ggplot(dfGP7, aes(factor(response), Freq , fill = GP7 )) +
geom_bar(stat="identity", position = "dodge", width = 0.6) +
xlab("Provider-Documented ECOG Score") +
ylab("Number of Instances") +
scale_x_discrete( labels=c(
"0"="ECOG = 0",
"1"="ECOG = 1",
"2"="ECOG = 2",
"3"="ECOG = 3"
) ) +
theme(axis.text.x = element_text(face="bold", size = 12),
legend.position=c(0.5,1),
legend.justification=c(0.5,1),
axis.text.y = element_text(face="bold", size = 12),
axis.title = element_text(face="bold", size = 14) ) +
scale_fill_brewer(name=("Patient response to\n\"I am forced to spend time in bed\""),
labels=
c("\"Not at all\"",
"\"A little bit\"",
"\"Somewhat\"",
"\"Quite a bit\"",
"\"Very much\""),
palette="Spectral",
direction=-1)
